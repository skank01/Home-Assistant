sensor:
  - platform: time_date
    display_options:
      - time
      - date
      - date_time
  - platform: template
    sensors:
      date_long: 
        friendly_name: 'Datum'
        value_template: >
          {% set months = ["Januari", "Februari", "Maart", "April", "Mei", "Juni", "July", "Augustus", "September", "Oktober", "November", "December"] %}
          {% set month = months[now().strftime('%m') | int -1] %}  
          {{ now().strftime('%d') + ' ' + month + ' '+ now().strftime('%Y') }}
        icon_template: mdi:calendar-clock    
  - platform: template
    sensors:
      date_short: 
        friendly_name: 'Datum Kort'
        value_template: >
          {% set months = ["Jan", "Feb", "Maa", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"] %}
          {% set month = months[now().strftime('%m') | int -1] %}  
          {{ now().strftime('%d') + ' ' + month + ' '+ now().strftime('%Y') }}
        icon_template: mdi:calendar-clock          
  - platform: template
    sensors:
      greeting:
        value_template: >
          {% set state = states('sensor.time') %}
          {% if '00:00' <= state  < '06:00' %}
            Goeienacht !
          {% elif '06:00' <= state  < '12:00' %}
            Goeiemorgen !
          {% elif '12:00' <= state  < '18:00' %}
            Goeiemiddag !
          {% else %}
            Goeieavond !
          {% endif %}    
  - platform: template
    sensors: 
      temperature: 
        unit_of_measurement: Â°C
        value_template: "{{ state_attr('weather.thuis', 'temperature') }}"
  - platform: template
    sensors:
      postbus:
        value_template: >
          {{ 'open' if is_state('input_boolean.brievenbus', 'on') or is_state('input_boolean.pakjesbus', 'on')
             else 'closed' }}
        friendly_name: Post    
  - platform: template
    sensors:
      solar_angle:
        friendly_name: "Stand zon"
        unit_of_measurement: 'graden'
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"

      sunrise:
        value_template: "{{ state_attr('sun.sun', 'next_rising') }}"


#### SERVER MONITORING #######################################################
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: "/"
      - type: memory_use_percent
      - type: processor_use

#### COUNT ENTITIES ##########################################################
  - platform: template
    sensors:
      count_automations:
        friendly_name: Automations
        icon_template: mdi:robot
        value_template: "{{ states.automation | count }}"
      count_binary_sensors:
        friendly_name: Binary Sensors
        icon_template: mdi:contrast-circle
        value_template: "{{ states.binary_sensor | count }}"
      count_device_trackers:
        friendly_name: Device Trackers
        icon_template: mdi:radar
        value_template: "{{ states.device_tracker | count }}"
      count_lights:
        friendly_name: Lights
        icon_template: mdi:lightbulb-group
        value_template: "{{ states.light | count }}"
      count_scripts:
        friendly_name: Scripts
        icon_template: mdi:script-text
        value_template: "{{ states.script | count }}"
      count_sensors:
        friendly_name: Sensors
        icon_template: mdi:leak
        value_template: "{{ states.sensor | count }}"
      count_switches:
        friendly_name: Switches
        icon_template: mdi:light-switch
        value_template: "{{ states.switch | count }}"
      count_zones:
        friendly_name: Zones
        icon_template: mdi:map-marker-radius
        value_template: "{{ states.zone | count }}"
      
#### MEASURING ##########################################################  
  - platform: integration
    source: sensor.power_nachtlampje
    name: energy_verbruikt
    unit_prefix: k
    round: 2
    method: left
utility_meter:
  energy:
    source: sensor.energy_verbruikt
    cycle: daily